namespace: vault 

vault:
  metadata:
    defines: metadata
    name: Vault by HashiCorp
    description: Vault secures, stores, and tightly controls access to tokens, passwords, certificates, API keys, and other secrets in modern computing.
    website: https://www.vaultproject.io
    publisher: monk.io
    icon: vault-hashicorp.png  
  defines: runnable
  variables:
    monk_vault_port:
      value: 8201
      type: string
    monk_image_tag:
      value: latest
    monk_vault_addr:
      env: VAULT_ADDR
      value: <- `http://localhost:${monk_vault_port}`
      type: string
    monk_vault_api_addr:
      env: VAULT_API_ADDR
      value: <- `http://0.0.0.0:${monk_vault_port}`
      type: string
    monk_skip_setcap:
      env: SKIP_SETCAP
      value: false
    monk_skip_chown:
      env: SKIP_CHOWN
      value: false
  containers:
    vault:
      ports:
        - <- `0.0.0.0:8201:${monk_vault_port}`
      image: vault
      bash: vault server --config /vault/config/config.json
      image-tag: <- `${monk_image_tag}`
  files:
    config_file:
      container: vault
      mode: 0644
      path: /vault/config/config.json
      contents: |
        {
          "storage": {
            "file": {
              "path": "vault/file"
            }
          },
          "listener": {
            "tcp": {
              "address": "0.0.0.0:{{ v "monk_vault_port"}}",
              "tls_disable": true
            }
          },
          "ui": true,
          "max_lease_ttl": "8760h",
          "default_lease_ttl": "8760h",
          "disable_mlock": true
        }
    unlock_file: 
      container: vault
      mode: 0775
      path: /vault/unlock.sh
      contents: |
        #!/usr/bin/env sh

        set -ex
        vault operator init > /vault/file/keys
        vault operator unseal $(grep 'Unseal Key 1:' /vault/file/keys | awk '{print $NF}')
        vault operator unseal $(grep 'Unseal Key 2:' /vault/file/keys | awk '{print $NF}')
        vault operator unseal $(grep 'Unseal Key 3:' /vault/file/keys | awk '{print $NF}')
        export ROOT_TOKEN=$(grep 'Initial Root Token:' /vault/file/keys | awk '{print $NF}')
        vault login $ROOT_TOKEN
        
        show_token() {
          print $(grep 'Initial Root Token:' /vault/file/keys | awk '{print $NF}')
        }

    show_token_file: 
      container: vault
      mode: 0775
      path: /vault/show_token_file.sh
      contents: |
        #!/usr/bin/env sh
        set -ex
        
        echo $(grep 'Initial Root Token:' /vault/file/keys | awk '{print $NF}')

  actions:
    unlock:
      code: exec("vault", "/bin/sh", "/vault/unlock.sh")
      description: Vault Unlock Login
    show_token:
      code: exec("vault", "/bin/sh", "/vault/show_token_file.sh")
      description: Vault Show token
  services:
    vault-svc:
      container: vault
      port: <- `${monk_vault_port}`
      protocol: tcp